<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>AdminLTE 3 | Dashboard</title>

    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&amp;display=fallback" />

    <link rel="stylesheet" href="plugins/fontawesome-free/css/all.min.css" />

    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css" />

    <link rel="stylesheet" href="plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css" />

    <link rel="stylesheet" href="plugins/icheck-bootstrap/icheck-bootstrap.min.css" />

    <link rel="stylesheet" href="plugins/jqvmap/jqvmap.min.css" />

    <link rel="stylesheet" href="dist/css/adminlte.min.css?v=3.2.0" />

    <link rel="stylesheet" href="plugins/overlayScrollbars/css/OverlayScrollbars.min.css" />

    <link rel="stylesheet" href="plugins/daterangepicker/daterangepicker.css" />

    <link rel="stylesheet" href="plugins/summernote/summernote-bs4.min.css" />
    <script defer="" referrerpolicy="origin"
        src="/cdn-cgi/zaraz/s.js?z=JTdCJTIyZXhlY3V0ZWQlMjIlM0ElNUIlNUQlMkMlMjJ0JTIyJTNBJTIyQWRtaW5MVEUlMjAzJTIwJTdDJTIwRGFzaGJvYXJkJTIyJTJDJTIyeCUyMiUzQTAuNzc4NjQ2NDMwOTUyMTI3NSUyQyUyMnclMjIlM0ExNTM2JTJDJTIyaCUyMiUzQTg2NCUyQyUyMmolMjIlM0E3MzAlMkMlMjJlJTIyJTNBMTUzNiUyQyUyMmwlMjIlM0ElMjJodHRwcyUzQSUyRiUyRmFkbWlubHRlLmlvJTJGdGhlbWVzJTJGdjMlMkZpbmRleC5odG1sJTIyJTJDJTIyciUyMiUzQSUyMmh0dHBzJTNBJTJGJTJGYWRtaW5sdGUuaW8lMkZ0aGVtZXMlMkZ2MyUyRmluZGV4My5odG1sJTIyJTJDJTIyayUyMiUzQTI0JTJDJTIybiUyMiUzQSUyMlVURi04JTIyJTJDJTIybyUyMiUzQS00MjAlMkMlMjJxJTIyJTNBJTVCJTVEJTdE"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script nonce="f92502a7-b46a-4ec5-a2c7-de941fbe97d5">
        try {
            (function (w, d) {
                !(function (o, p, q, r) {
                    o[q] = o[q] || {};
                    o[q].executed = [];
                    o.zaraz = { deferred: [], listeners: [] };
                    o.zaraz.q = [];
                    o.zaraz._f = function (s) {
                        return async function () {
                            var t = Array.prototype.slice.call(arguments);
                            o.zaraz.q.push({ m: s, a: t });
                        };
                    };
                    for (const u of ["track", "set", "debug"]) o.zaraz[u] = o.zaraz._f(u);
                    o.zaraz.init = () => {
                        var v = p.getElementsByTagName(r)[0],
                            w = p.createElement(r),
                            x = p.getElementsByTagName("title")[0];
                        x && (o[q].t = p.getElementsByTagName("title")[0].text);
                        o[q].x = Math.random();
                        o[q].w = o.screen.width;
                        o[q].h = o.screen.height;
                        o[q].j = o.innerHeight;
                        o[q].e = o.innerWidth;
                        o[q].l = o.location.href;
                        o[q].r = p.referrer;
                        o[q].k = o.screen.colorDepth;
                        o[q].n = p.characterSet;
                        o[q].o = new Date().getTimezoneOffset();
                        if (o.dataLayer)
                            for (const B of Object.entries(
                                Object.entries(dataLayer).reduce(
                                    (C, D) => ({ ...C[1], ...D[1] }),
                                    {}
                                )
                            ))
                                zaraz.set(B[0], B[1], { scope: "page" });
                        o[q].q = [];
                        for (; o.zaraz.q.length;) {
                            const E = o.zaraz.q.shift();
                            o[q].q.push(E);
                        }
                        w.defer = !0;
                        for (const F of [localStorage, sessionStorage])
                            Object.keys(F || {})
                                .filter((H) => H.startsWith("_zaraz_"))
                                .forEach((G) => {
                                    try {
                                        o[q]["z_" + G.slice(7)] = JSON.parse(F.getItem(G));
                                    } catch {
                                        o[q]["z_" + G.slice(7)] = F.getItem(G);
                                    }
                                });
                        w.referrerPolicy = "origin";
                        w.src =
                            "/cdn-cgi/zaraz/s.js?z=" +
                            btoa(encodeURIComponent(JSON.stringify(o[q])));
                        v.parentNode.insertBefore(w, v);
                    };
                    ["complete", "interactive"].includes(p.readyState)
                        ? zaraz.init()
                        : o.addEventListener("DOMContentLoaded", zaraz.init);
                })(w, d, "zarazData", "script");
            })(window, document);
        } catch (e) {
            throw (fetch("/cdn-cgi/zaraz/t"), e);
        }
    </script>
    <style>
        .small-box .icon>i.fa, .small-box .icon>i.fab, .small-box .icon>i.fad, .small-box .icon>i.fal, .small-box .icon>i.far, .small-box .icon>i.fas, .small-box .icon>i.ion {
            font-size: 70px;
            top: 20px;
        }
        .small-box .icon>i {
            font-size: 90px;
            position: absolute;
            right: 15px;
            top: 15px;
            transition: -webkit-transform .3s linear;
            transition: transform .3s linear;
            transition: transform .3s linear, -webkit-transform .3s linear;
        }
        .small-box .icon>svg.fa, .small-box .icon>svg.fab, .small-box .icon>svg.fad, .small-box .icon>svg.fal, .small-box .icon>svg.far, .small-box .icon>svg.fas, .small-box .icon>svg.ion {
            font-size: 70px;
            top: 20px;
            height: 70px;
        }
        .small-box .icon>svg {
            font-size: 90px;
            position: absolute;
            right: 15px;
            top: 15px;
            transition: -webkit-transform .3s linear;
            transition: transform .3s linear;
            transition: transform .3s linear, -webkit-transform .3s linear;
        }
    </style>
   
</head>
<section class="content">
    <div class="container-fluid">
        <!-- Chung -->
        <div class="d-flex flex-column gap-5">
            <div class="d-flex gap-5">
                <div class="small-box bg-info flex-fill d-flex flex-column justify-content-between">
                    <div class="inner">
                        <h1><%= number_of_hotel %></h1>
                        <p style="font-size: 30px; font-family: initial;">Khách sạn</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-home"></i>                    </div>
                </div>
        
                <!-- <div class="small-box bg-danger flex-fill d-flex flex-column justify-content-between">
                    <div class="inner">
                        <h1><%= number_of_type_room %></h1>
                        <p style="font-size: 30px; font-family: initial;">Loại phòng</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-person-add"></i>                    </div>
                </div> -->
                <div class="small-box bg-success flex-fill d-flex flex-column justify-content-between">
                    <div class="inner">
                        <h1><%= number_of_city %></h1>
                        <p style="font-size: 30px; font-family: initial;">Địa điểm</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-search"></i>                    </div>
                </div>
                <div class="small-box bg-success flex-fill d-flex flex-column justify-content-between">
                    <div class="inner">
                        <h1><%= number_of_selection %></h1>
                        <p style="font-size: 30px; font-family: initial;">Hình thức thanh toán</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-card"></i>                    </div>
                </div>
                
            </div>
        </div>
        <!-- Form chọn -->
        <form action="/administrator/statistical" method="GET" class="mb-4">
            <div class="form-group">
                <label for="periodType">Chọn loại thời gian:</label>
                <select id="periodType" name="type" class="form-control">
                    <option value="month" selected>Tháng</option>
                    <option value="quarter">Quý</option>
                    <option value="year">Năm</option>
                </select>
            </div>
        
            <div class="form-group" id="monthInput">
                <label for="month">Chọn tháng:</label>
                <input type="month" id="month" name="month" class="form-control" value="<%= new Date().toISOString().slice(0, 7) %>">
            </div>
        
            <div class="form-group d-none" id="quarterInput">
                <label for="quarter">Chọn quý:</label>
                <select id="quarter" name="quarter" class="form-control">
                    <option value="<%= new Date().getFullYear() %>-1">Quý 1</option>
                    <option value="<%= new Date().getFullYear() %>-2">Quý 2</option>
                    <option value="<%= new Date().getFullYear() %>-3">Quý 3</option>
                    <option value="<%= new Date().getFullYear() %>-4">Quý 4</option>
                </select>
            </div>
        
            <div class="form-group d-none" id="yearInput">
                <label for="year">Chọn năm:</label>
                <input type="number" id="year" name="year" class="form-control" value="<%= new Date().getFullYear() %>" min="2000" max="2100">
            </div>
        
            <button type="submit" class="btn btn-primary mt-2">Xem thống kê</button>
            <button type="button" id="resetButton" class="btn btn-secondary mt-2">Xóa phân loại</button>
        </form>
        <!-- Biểu đồ -->
        <div class="chart-container" style="position: relative; height:400px; width:800px;">
            <canvas id="bookingChart"></canvas>
        </div>
    </div>
</section>

<script>
    const result = <%- JSON.stringify(statistic_result) %>;
    const name = <%- JSON.stringify(hotel_names) %>;
    const type = <%- JSON.stringify(type) %>;
    const month = <%- JSON.stringify(month) %>;
    const quarter = <%- JSON.stringify(quarter) %>;
    const year = <%- JSON.stringify(year) %>;
    const visualData = {
        month:  {title: 'tháng', value: month},
        quarter: {title: 'quý', value: quarter},
        year: {title: 'năm', value: year}
    }
    const title = `Số lượt booking vào ${visualData[type].title} ${visualData[type].value}`
    const labels = Object.values(name);
    const data = {
        labels: labels,
        datasets: [{
            label: title,
            data: Object.values(result).map(item => item.totalBookings),
            backgroundColor: 'rgba(54, 162, 235, 0.2)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1
        }]
    };

    // Cấu hình biểu đồ
    const config = {
        type: 'bar',
        data: data,
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    };

    const bookingChart = new Chart(
        document.getElementById('bookingChart'),
        config
    );
    const periodTypeSelect = document.getElementById('periodType');
    const monthInput = document.getElementById('monthInput');
    const quarterInput = document.getElementById('quarterInput');
    const yearInput = document.getElementById('yearInput');

    periodTypeSelect.addEventListener('change', function() {
        switch (this.value) {
            case 'month':
                monthInput.classList.remove('d-none');
                quarterInput.classList.add('d-none');
                yearInput.classList.add('d-none');
                break;
            case 'quarter':
                monthInput.classList.add('d-none');
                quarterInput.classList.remove('d-none');
                yearInput.classList.add('d-none');
                break;
            case 'year':
                monthInput.classList.add('d-none');
                quarterInput.classList.add('d-none');
                yearInput.classList.remove('d-none');
                break;
        }
    });

    resetButton.addEventListener('click', function() {
        window.location.href = '/administrator/statistical';
    });
</script>